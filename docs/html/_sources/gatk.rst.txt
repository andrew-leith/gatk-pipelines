GATK EXAC Protocol Walkthrough
==============================

Installing the Software
=======================

The software needed by this pipeline can be installed in a few short steps using the `conda package manager <https://conda.io/docs/user-guide/install/index.html>`_.  With conda on your system - which does not require superuser access to configure - the following commands will install the requisite tools::

  conda create -n gatk -c compbiocore gatk

This command generates a new conda environment entitled 'gatk' and installs a GATK wrapper script into it.  Once completed, the 'gatk' environment should be automatically activated, which will be denoted by a '(gatk)' at the left of your command prompt like so:

.. image:: terminal.png
   :scale: 50 %

Next, we install the other dependencies::

  conda install -c compbiocore bwa picard samtools

This command installs three additional pieces of software needed for this pipeline: the BWA aligner, the samtools utility, and the Picard suite.

Next, it is necessary to download the GATK software itself.  Due to licensing constraints, the conda recipe for GATK does not include its executible.  It does, however, include a utility for configuring GATK as soon as it is downloaded.  Thus, once you download GATK from the Broad, run::

  gatk-register /path/to/GATK

and the conda package will take care of the rest, moving everything where it needs to go.  From there, GATK can be evoked from the command line; the installation can be verified by running::

  gatk -version

Required Reference Files
========================

The Broad Best Practices protocol incorporates a number of reference files, including things such as a reference genome and known snp locations.  These files can be found as a part of the 'bundle' associated with the genomic reference of the user's choice.  For the purposes of this example, we elected to utilize hg19.

Here, we assign the various references - most of which have very long file paths due to the directory structure of the Broad bundle - to variables so that we can refer to them in a more readable fashion later::

  myfasta="/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta"
  mydict="/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta.dict"
  mysnp="/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/dbsnp_138.hg19.vcf"
  myindel="/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf"
  myhapmap="/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/hapmap_3.3.hg19.sites.vcf"
  myomni="/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/1000G_omni2.5.hg19.sites.vcf"
  mymills="/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf"
  myhighconf="/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/1000G_phase1.snps.high_confidence.hg19.sites.vcf"

Sample Processing and Preparation
=================================

To begin with, the raw reads must be aligned to a reference genome, ultimately generating a bam file for analysis by GATK.  The aligner preferred by the GATK developers is BWA, so that is the only aligner our protocol presently accounts for.

The following steps should be applied to each pair of fastq files; our protocol accomplishes this process by looping over every sample, though it should be possible to modify for parallel computation given sufficient resources.

We define the variable::

  $mysamplebase
  myR1=$mysamplebase"_1.fastq"
  myR2=$mysamplebase"_2.fastq"

as the base filename (e.g. 'SRR062634' for 'SRR062634_1.fastq' and 'SRR062634_2.fastq'), and then use that to determine the names of the fastqs for the given sample.  This variable is used in nearly every successive function in the entire pipeline, so assigning it correctly is imperative.


Align reads to the reference genome using `BWA-mem <http://bio-bwa.sourceforge.net/bwa.shtml>`_, specifying read groups as is mandatory::

  bwa mem \
    -t 8 \
    -R '@RG\tID:'$mysamplebase'\tLB:'$mysamplebase'\tSM:'$mysamplebase'\tPL:ILLUMINA' \
    $myfasta \
    $myR1 $myR2 \
    > $mysamplebase".sam"

Using `samtools <http://www.htslib.org/doc/samtools.html>`_, process the SAM file into a sorted BAM file::

  samtools view -S -b $mysamplebase".sam" > $mysamplebase".bam"
  samtools sort $mysamplebase".bam" -T temp -o $mysamplebase"_sorted.bam"
  samtools index $mysamplebase"_sorted.bam"

Run Picard Tools' `MeanQualityByCycle <https://broadinstitute.github.io/picard/command-line-overview.html#MeanQualityByCycle>`_ utility::

  picard MeanQualityByCycle \
    INPUT=$mysamplebase"_sorted.bam" \
    CHART_OUTPUT=$mysamplebase"_mean_quality_by_cycle.pdf" \
    OUTPUT=$mysamplebase"_read_quality_by_cycle.txt" \
    VALIDATION_STRINGENCY=LENIENT \
    REFERENCE_SEQUENCE=$myfasta

the `QualityScoreDistribution <https://broadinstitute.github.io/picard/command-line-overview.html#QualityScoreDistribution>`_ utility::

  picard QualityScoreDistribution \
    INPUT=$mysamplebase"_sorted.bam" \
    CHART_OUTPUT=$mysamplebase"_mean_quality_overall.pdf" \
    OUTPUT=$mysamplebase"_read_quality_overall.txt" \
    VALIDATION_STRINGENCY=LENIENT \
    REFERENCE_SEQUENCE=$myfasta

the `CollectWgsMetrics <https://broadinstitute.github.io/picard/command-line-overview.html#CollectWgsMetrics>`_ utility::

  picard CollectWgsMetrics \
    INPUT=$mysamplebase"_sorted.bam" OUTPUT=$mysamplebase"_stats_picard.txt" \
    REFERENCE_SEQUENCE=$myfasta \
    MINIMUM_MAPPING_QUALITY=20 \
    MINIMUM_BASE_QUALITY=20 \
    VALIDATION_STRINGENCY=LENIENT

and finally the `MarkDuplicates <https://broadinstitute.github.io/picard/command-line-overview.html#MarkDuplicates>`_ utility::

  picard MarkDuplicates I=$mysamplebase"_sorted.bam" \
    O=$mysamplebase"_sorted_dedup.bam" M=$mysamplebase"_dedup_metric.txt" \
    VALIDATION_STRINGENCY=LENIENT \
    REMOVE_DUPLICATES=true CREATE_INDEX=true

This last step, which produces a deduplicated BAM file, is particularly important for further analysis.  In each case, VALIDATION_STRINGENCY=LENIENT is passed to Picard Tools as recommended by the GATK developers on their forums; omission of this argument often leads to the software breaking.

Next, the first two GATK steps proceed, creating realignment targets and then utilizing them.

GATK's `RealignerTargetCreator <https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_tools_walkers_indels_RealignerTargetCreator.php>`_::

  gatk -T RealignerTargetCreator \
    -R $myfasta \
    -I $mysamplebase"_sorted_dedup.bam" \
    -known $myindel \
    -o $mysamplebase"_realign_targets.intervals"

  gatk -T IndelRealigner \
    -R $myfasta \
    -known $myindel \
    -targetIntervals $mysamplebase"_realign_targets.intervals"  \
    -I $mysamplebase"_sorted_dedup.bam" \
    -o $mysamplebase"_sorted_dedup_realigned.bam" \
    --filter_bases_not_stored

The resulting BAM file is then indexed::

  picard BuildBamIndex \
    I=$mysamplebase"_sorted_dedup_realigned.bam"

GATK `BaseRecalibrator <https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_tools_walkers_bqsr_BaseRecalibrator.php>`_::

  gatk -T BaseRecalibrator \
    -R $myfasta \
    -knownSites $mysnp \
    -knownSites $myindel \
    -I $mysamplebase"_sorted_dedup_realigned.bam" \
    -o $mysamplebase"_recal_table.txt" \
    -nct 8

  gatk -T BaseRecalibrator \
    -R $myfasta \
    -I $mysamplebase"_sorted_dedup_realigned.bam" \
    -knownSites $mysnp \
    -knownSites $myindel \
    -BQSR $mysamplebase"_recal_table.txt" \
    -o $mysamplebase"_post_recal_table.txt"

Picard `CollectOxoGMetrics <https://broadinstitute.github.io/picard/command-line-overview.html#CollectOxoGMetrics>`_::

  picard CollectOxoGMetrics \
    I=$mysamplebase"_sorted_dedup_realigned.bam" \
    O=$mysamplebase"_sorted_dedup_realigned_oxoG_metrics.txt" \
    R=$myfasta \
    VALIDATION_STRINGENCY=LENIENT

Picard `CollectSequencingArtifactMetrics <https://broadinstitute.github.io/picard/command-line-overview.html#CollectSequencingArtifactMetrics>`_::

  picard CollectSequencingArtifactMetrics \
    I=$mysamplebase"_sorted_dedup_realigned.bam" \
    O=$mysamplebase"_sorted_dedup_realigned_artifact_metrics.txt" \
    R=$myfasta \
    VALIDATION_STRINGENCY=LENIENT

Picard `CollectAlignmentSummaryMetrics <https://broadinstitute.github.io/picard/command-line-overview.html#CollectAlignmentSummaryMetrics>`_::

  picard CollectAlignmentSummaryMetrics \
    R=$myfasta \
    I=$mysamplebase"_sorted_dedup_realigned.bam" \
    O=$mysamplebase"_sorted_dedup_realigned_alignment_metrics.txt"

Picard `CollectInsertSizeMetrics <https://broadinstitute.github.io/picard/command-line-overview.html#CollectInsertSizeMetrics>`_::

  picard CollectInsertSizeMetrics \
    I=$mysamplebase"_sorted_dedup_realigned.bam" \
    O=$mysamplebase"_sorted_dedup_realigned_insert_size_metrics.txt" \
    H=$mysamplebase"_sorted_dedup_realigned_insert_size_histogram.pdf" \
    M=0.5

GATK `AnalyzeCovariates <https://software.broadinstitute.org/gatk/gatkdocs/3.5-0/org_broadinstitute_gatk_tools_walkers_bqsr_AnalyzeCovariates.php>`_::

  gatk -T AnalyzeCovariates \
    -R $myfasta \
    -before $mysamplebase"_recal_table.txt" \
    -after $mysamplebase"_post_recal_table.txt" \
    -plots $mysamplebase"_recalibration_plots.pdf"

GATK `PrintReads <https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_tools_walkers_readutils_PrintReads.php>`_::

  gatk -T PrintReads \
    -R $myfasta \
    -I $mysamplebase"_sorted_dedup_realigned.bam" \
    -BQSR $mysamplebase"_recal_table.txt" \
    -o  $mysamplebase"_GATK.bam"

Picard `BuildBamIndex <https://broadinstitute.github.io/picard/command-line-overview.html#BuildBamIndex>`_::

  picard BuildBamIndex \
    I= $mysamplebase"_GATK.bam"

GATK `HaplotypeCaller <https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_tools_walkers_haplotypecaller_HaplotypeCaller.php>`_::

  gatk -Xmx64g -T HaplotypeCaller --disable_auto_index_creation_and_locking_when_reading_rods \
    -R $myfasta \
    -I  $mysamplebase"_GATK.bam" \
    --dbsnp  $mysnp \
    -stand_call_conf 30 \
    --minPruning 3 --maxNumHaplotypesInPopulation 200 \
    --max_alternate_alleles 3 -variant_index_parameter 128000 \
    -variant_index_type LINEAR -contamination 0.0 \
    --genotyping_mode DISCOVERY \
    --emitRefConfidence GVCF \
    -o $mysamplebase"_GATK-HC.g.vcf"


Combined-Sample Analysis
========================

Generate a list of samples::

  ls -1a *GATK-HC_exac.g.vcf > vcfs_exac.list

GATK `GenotypeGVCFs <https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_tools_walkers_variantutils_GenotypeGVCFs.php>`_::

  gatk -T GenotypeGVCFs \
    -R "/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta" \
    --variant "vcfs_exac.list" \
    -o "all_GATK-HC_joined_exac.g.vcf"

Picard `MakeSitesOnlyVcf <https://broadinstitute.github.io/picard/command-line-overview.html#MakeSitesOnlyVcf>`_::

  picard MakeSitesOnlyVcf \
    INPUT="all_GATK-HC_joined_exac.g.vcf" \
    OUTPUT="all_GATK-HC_joined_sites_only_exac.g.vcf" \
    VALIDATION_STRINGENCY=LENIENT

GATK `VariantRecalibrator <https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_tools_walkers_variantrecalibration_VariantRecalibrator.php>`_::

  gatk -T VariantRecalibrator \
    -R "/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta" \
    -input "all_GATK-HC_joined_sites_only_exac.g.vcf" \
    -resource:hapmap,known=false,training=true,truth=true,prior=15.0 /users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/hapmap_3.3.hg19.sites.vcf \
    -resource:omni,known=false,training=true,truth=true,prior=12.0 /users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/1000G_omni2.5.hg19.sites.vcf \
    -resource:1000G,known=false,training=true,truth=false,prior=10.0 /users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/1000G_phase1.snps.high_confidence.hg19.sites.vcf \
    -resource:dbsnp,known=true,training=false,truth=false,prior=2.0 $mysnp \
    --maxGaussians 6 \
    -an QD -an MQRankSum -an ReadPosRankSum -an FS -an MQ -an InbreedingCoeff \
    -mode SNP \
    -allPoly -tranche 100.0 -tranche 99.95 -tranche 99.9 -tranche 99.8 -tranche 99.6 \
    -tranche 99.5 -tranche 99.4 -tranche 99.3 -tranche 99.0 -tranche 98.0 -tranche 97.0 \
    -tranche 90.0 \
    -recalFile "all_recalibrate_SNP_exac.recal" \
    -tranchesFile "all_recalibrate_SNP_exac.tranches" \
    -rscriptFile "all_recalibrate_SNP_plots_exac.R"

GATK `ApplyRecalibration <https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_tools_walkers_variantrecalibration_ApplyRecalibration.php>`_::

  gatk -T ApplyRecalibration \
    -R "/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta" \
    -input "all_GATK-HC_joined_sites_only_exac.g.vcf" \
    -mode SNP \
    --ts_filter_level 99.6 \
    -recalFile "all_recalibrate_SNP_exac.recal" \
    -tranchesFile "all_recalibrate_SNP_exac.tranches" \
    -o "all_recalibrated_snps_raw_indels_exac.vcf"

GATK `VariantRecalibrator <https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_tools_walkers_variantrecalibration_VariantRecalibrator.php>`_::

  gatk -T VariantRecalibrator \
    -R "/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta" \
    -input "all_recalibrated_snps_raw_indels_exac.vcf" \
    -resource:mills,known=false,training=true,truth=true,prior=12.0 /users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf \
    -resource:dbsnp,known=true,training=false,truth=false,prior=2.0 $mysnp \
    -an FS -an ReadPosRankSum -an InbreedingCoeff -an MQRankSum -an QD \
    -mode INDEL \
    -allPoly -tranche 100.0 -tranche 99.95 -tranche 99.9 -tranche 99.5 -tranche 99.0 -tranche 97.0 \
    -tranche 96.0 -tranche 95.0 -tranche 94.0 -tranche 93.5 -tranche 93.0 -tranche 92.0 -tranche 91.0 -tranche 90.0 \
    --maxGaussians 6 \
    -recalFile "all_recalibrate_INDEL_exac.recal" \
    -tranchesFile "all_recalibrate_INDEL_exac.tranches" \
    -rscriptFile "all_recalibrate_INDEL_plots_exac.R"

GATK `ApplyRecalibration <https://software.broadinstitute.org/gatk/documentation/tooldocs/current/org_broadinstitute_gatk_tools_walkers_variantrecalibration_ApplyRecalibration.php>`_::

  gatk -T ApplyRecalibration \
    -R "/users/aleith/scratch/broad/ftp.broadinstitute.org/bundle/hg19/ucsc.hg19.fasta" \
    -input "all_recalibrated_snps_raw_indels_exac.vcf" \
    -mode INDEL \
    --ts_filter_level 95.0 \
    -recalFile "all_recalibrate_INDEL_exac.recal" \
    -tranchesFile "all_recalibrate_INDEL_exac.tranches" \
    -o "all_recalibrated_variants_exac.vcf"
